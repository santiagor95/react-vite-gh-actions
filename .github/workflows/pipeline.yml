name: Deployment Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:

  #  Cancela el deploy hecho anteriormente si aun continua corriendo
  avoid_redundancy:
    name: Avoid redundancy
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

  lint: 
    name: Lint
    runs-on: ubuntu-latest
    steps:
    #  Obtiene el repositorio en el ultimo commit
    - name: Checkout last commit
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Intstala ambiente node
    - name: Setup node env
      uses: actions/setup-node@v3
      with:
        cache: npm
        node-version: 16
    - name: Install dependencies
      run: npm ci
    - name: Lint
      run: npm run lint

  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
    #  Obtiene el repositorio en el ultimo commit
    - name: Checkout last commit
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Intstala ambiente node
    - name: Setup node env
      uses: actions/setup-node@v3
      with:
        cache: npm
        node-version: 16
    - name: Install dependencies
      run: npm ci
    - name: Unit test
      run: npm run test

  # build: 
  #   needs: [unit_tests, lint]
  #   runs-on: ubuntu-latest
  #   name: Build
  #   steps:
  #   #  Obtiene el repositorio en el ultimo commit
  #   - name: Checkout last commit
  #     uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   # Intstala ambiente node
  #   - name: Install dependencies
  #     uses: actions/setup-node@v3
  #     with:
  #       cache: npm      
  #       node-version: 16
  #   - name: Install dependencies
  #     run: npm ci
  #   - name: Build App
  #     run: npm run build
  #   - name: Upload a Build Artifact
  #     uses: actions/upload-artifact@v3.1.2
  #     with:
  #       name: dist
  #       path: dist
  
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Build project
        run: npm run build

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v3
        with:
          name: production-files
          path: ./dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: production-files
          path: ./dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist


  # deploy:
  #   needs: [unit_tests]
  #   runs-on: ubuntu-latest
  #   name: Deploy
  #   steps:
  #   #  Obtiene el repositorio en el ultimo commit
  #   - name: Checkout last commit
  #     uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   - name: Deploy to Heroku
  #     if: ${{ github.event_name == 'push' }}
  #     uses: AkhileshNS/heroku-deploy@v3.12.13
  #     with:
  #       heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #       heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
  #       heroku_email: ${{secrets.HEROKU_APP_EMAIL}}
  #       healthcheck: "https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/health"
  #       checkstring: "ok"
  #       rollbackonhealthcheckfailed: true
